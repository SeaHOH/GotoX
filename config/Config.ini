#coding:utf-8
#确保文件编码与以上相符、不要修改！
#*****************************************************************************
# 如果你是使用 Windows 记事本打开此文件，请换用其它文本编辑工具。
#*****************************************************************************
[misc]
#启动时，是否检查同时运行了可能造成冲突的进程，只检测 Windows 系统
checkprocess = 1
#启动时，是否检查并导入 CA 证书，暂时只支持 Windows 系统证书仓库
checksysca = 1
#解决某些情况下无法写入数据导致客户端无法收到完整数据的问题，遇到此情况请开启
#在 Windows 下使用 gevent.libuv 事件循环时，也会自动启用它
#如果不修补也能正常使用 gevent 时，可以在后一个选项撤销它
geventpatch = 0
revertgeventpatch = 0

[listen]
#监听 ip 和端口
# 127.0.0.1 监听本机 IPv4 环回地址
#   0.0.0.0 监听本机所有 IPv4 地址
#       ::1 监听本机 IPv6 环回地址
#        :: 监听本机所有 IPv6 地址
#      留空 监听本机所有地址
#   某个 IP 只监听这个 IP 地址
ip = 127.0.0.1
#IP 主机名，用于 https 方式访问本代理，访问端口与 http 方式相同
#填入代理服务器主机的任意一个有效 IP 即可
#只能使用这个 IP 和可访问代理服务器主机的任意非 IP 主机名来访问本代理
iphost = 127.0.0.1
#自动代理端口
autoport = 8087
#活动代理端口
actport = 8086
#指定活动代理，默认为 cfw
act = cfw
#使用 GotoX 代理时的身份验证方式
# 0：不进行认证
# 1：Basic，这并不能保证安全，可通过抓包分析得到用户名和密码
# 2：IP，通过 HTTPS 链接登录，登录成功后只验证 IP
auth = 0
#免验证 IP 白名单，127.0.0.1、::ffff:127.0.0.1、::1 是本机地址
authwhitelist = 127.0.0.1
#验证格式：［用户名:密码|用户名2:密码2……］，必须使用冒号，不能使用非 ANSI 字符。
#默认为：［:］，即用户名和密码均留空，只保留冒号。
authuser = s:s

[log]
#启动后是否显示 GotoX 窗口，仅支持 Windows 系统
visible = 1
#是否打印除启动信息之外的日志到标准输出，不影响保存日志
print = 1
# 0：仅错误、警告
# 1：包括一般信息
# 2：包括 IP 筛选信息
# 3：所有信息包括调试信息
level = 1
#是否保存日志
save = 0
#日志文件保存位置
#未指定绝对路径时，保存到 log 目录
#如果指定的路径是目录，自动添加文件名 log.txt
file =
#最大日志文件大小，单位：KB
filesize = 1024
#最大日志存档数量: log.txt.1、log.txt.2、...
rotation = 1

[link]
# ipv4、ipv6、ipv46，默认 ipv46
#为了在设置为 ipv6 时通过 NAT64 网关访问仅提供 IPv4 地址的网址
#可参考 https://developers.google.com/speed/public-dns/docs/dns64 设置 DNS
# CFIEC 的 DNS 也支持 DNS64：http://www.chinaipv6.com.cn/
profile = ipv46
#检测 IPv6 网络时，只检查是否有分配全局 IP 或 teredo IP
#当网络状况不太好时，可以打开此项避免误判
fastv6check = 1
#新建连接时评优算法选出的 ip 数量
window = 3
#每 IP 最大连接数，上限 32，建议不要大于 16
#合适的值对于每个不同的站点和 IP 是不同的，可以优化响应表现
#连接数达到限制会有［LimiterFull］警告，可以参考出现频率来调整值
#针对部分单个网站的 CDN IP（域名不同、IP 通用的都适用，SNI 代理除外），
#可以在 iplist 中建立［cdn_］开头的列表（值可以是 IP 或域名），
#然后在 ActionFilter.ini 中应用 direct 规则，可以减少连接数，加快响应速度
#会影响 SNI 代理的使用，注意合理配置 SNI IP
maxperip = 6
#接收缓冲大小，上限 4M，建议 64-512K，默认 64K
recvbuffer = 65536
#发送缓冲大小，上限 1M，建议 16-128K，默认 16K
sendbuffer = 16384
#对谷歌域名进行 CA 公钥验证
verifygpk = 1
#本地加密 SSLv2、SSLv3、TLS、TLSv1、TLSv1.1、TLSv1.2、TLSv1.3，默认 TLS
#兼容模式 TLS 禁用 SSLv3 及以下版本
#当设置不支持的 TLSv1.3 时自动回落 TLSv1.2
localssl =
#远程加密 TLS、TLSv1、TLSv1.1、TLSv1.2、TLSv1.3，默认 TLS
#兼容模式 TLS 禁用 TLSv1.1 及以下版本
#当设置不支持的 TLSv1.3 时自动回落 TLSv1.2
remotessl =
#强制请求压缩内容，解压缩后无法提供原始内容大小信息，可能会不兼容某些应用
#未安装 brotlipy 时会自动关闭
requestcompress = 0
#普通连接超时设置
timeout = 5
#转发连接超时设置
fwdtimeout = 8
#普通连接 keepalive 有效时间
keeptime = 180
#转发连接 keepalive 有效时间
fwdkeeptime = 120
#直连、转发失败时使用临时规则的持续时间
temptime = 900
#直连、转发失败时不使用临时规则的域名列表
tempwhitelist =

[cfw]
#请填写 worker 的完整域名，只能填写一个
#如 cloudflare 提供的免费域名， worker-name.your-subdomain.workers.dev
#或者用你自己绑定的域名
worker =
#如果你部署了多个 worker，那么请将 .workers.dev 下的子域名 (仅一个) 和 worker 名称填入
#这两个设置将覆盖上面的 worker 设置，无法使用不同账户下的 worker 和绑定的域名
#每个 worker 提供 128MB 运存，6 个并发处理，请按需部署添加
#多个 worker 并不会增加免费配额，仅为增加请求队列使代理更流畅
subdomain =
workers =
#使用密码，默认为空。可以在服务端目录的 cloudflare_workers/index.js 中设定并部署，如果设定了，此处需保持一致
password =
#自定义 IP 节点
#如果不想使用解析结果，可填写任意可用的 Cloudflare IP，每个 IP 会自动扩展为 256 个
#注意不要重复填写同一网段的 IP，IPv4 掩码 24，IPv6 掩码 120
#如 162.159.208.0|162.159.209.0|162.159.210.0|162.159.211.0，共 4 * 256 个 IP
#可以设置不使用 explodeip 扩展 IP 数量
explodeip = 1
iplist =
#是否解码被混淆的 Email 地址，影响 Content-Type 属于 'text/html' 或 'application/xhtml+xml' 的响应
#当文本编码不是 UTF-8 (即 Worker 解码错误)，则不执行反混淆
decodeemail = 0
#连接超时设置
timeout = 10
#是否启用 keepalive
keepalive = 1
# keepalive 有效时间
keeptime = 180
#失败时本地重试次数，默认 2 次
fetchmax = 2

[gae]
#https://你的appid.appspot.com/ 查看服务端版本
appid =
#服务端记录 debug 信息级别（0-2）
debug = 0
#使用密码，默认为空。可以在服务端目录的 gae/gae.go 中设定并部署，如果设定了，此处需保持一致
password =
# GoProxy 服务端路径［/_gh/］，不再兼容其它服务端。
path = /_gh/
#针对 GAE/GWS 每 IP 最大连接数，上限 8，建议不要大于 4
#如果发现超时、丢包频繁，尝试设为 1 或 2
#还会影响 SNI 代理的使用，注意合理配置 SNI IP
maxperip = 2
# GAE 连接超时设置，如果需要经常下载超过 32MB 的文件，建议至少 4 秒
timeout = 10
#针对 GAE/GWS IP 是否启用 keepalive
keepalive = 1
#针对 GAE/GWS 的 keepalive 有效时间
keeptime = 30
#同时最大 GAE 请求数量系数 N，总数为 N * appid 数量，间接限制了 autorange 实际工作线程
#不会限制直连，建议 go 服务端 5 以下，py 服务端 3 以下
maxrequsts = 2
#是否在 GAE 服务器对访问网址的证书进行验证
sslverify = 1
#失败时本地重试次数，默认 2 次
fetchmax =
#响应内容大小超过 32MB 限制时，服务端重新请求内容大小，默认 4MB（4194304）
maxsize =
#固定 GAE 服务使用的 iplist，当值不是空白时（不能直接填 IP），将不会进行 IP 检查筛选
#可填写存在的任意列表名称
iplist =
# GAE 前置使用的列表，默认名称为 google_2p
iplist2p =
#修改使用 google_gae 列表连接时的 ServerNmae
#这与在自动规则中伪造 .appspot.com 的 SNI 等同，但自动规则的优先级更高，且只能伪造一个
#只有全部都是 *.appspot.com 域名才能保证 SNI IP 反代正确工作
#2018-12-20 更新：
#可以使用不包含点的任意字符串，或者是 *.appspot.com（* 不能是 www）
#使用 SNI IP 需修改 ip.use 文件的 google_gae 条目
#且 SNI IP 无法和非 SNI IP 一起工作，也无法进行筛选，需关闭 [picker/gae]
servername =
#是否启用前置代理
enableproxy = 0
#支持 HTTP 和 SOCKS4/5 代理，请确保代理有效，用户和密码正确
#协议://[用户名[:密码]@](主机名|ip):端口
#使用 | 分割多个代理
# SOCKS4 不支持代理 IPv6，可能无法正常工作
proxylist =

[iplist]
google_2p = www.google.com
#用于连接 GAE／forward／direct 的 IP 列表
# google_cn、google_gae、google_gws 为默认列表，不要使用
#可自行添加其它列表，不要使用域名作为名称
google_cn = www.g.cn|www.google.cn|firebase.google.cn|developers.google.cn
#谷歌相关域名列表请「一定」以 google_ 作为前缀
#google_xx =
# GGC 或用于谷歌域名的反向代理
#google_sni =
#通用的反向代理列表请「一定」以 sni_ 作为前缀
#sni_xx =
#特定网站的 CDN 列表请「一定」以 cdn_ 作为前缀
#cdn_xx =
cdn_cloudflare_dns = 162.159.132.53|162.159.36.1|162.159.46.1|104.16.249.249|104.16.248.249|1.1.1.1|1.0.0.1|2606:4700::6810:f9f9|2606:4700::6810:f8f9|2606:4700:4700::1001|2606:4700:4700::1111
cdn_wiki_text = text-lb.codfw.wikimedia.org|text-lb.eqiad.wikimedia.org|text-lb.esams.wikimedia.org|text-lb.eqsin.wikimedia.org|text-lb.ulsfo.wikimedia.org
cdn_wiki_upload = upload-lb.codfw.wikimedia.org|upload-lb.eqiad.wikimedia.org|upload-lb.esams.wikimedia.org|upload-lb.eqsin.wikimedia.org|upload-lb.ulsfo.wikimedia.org

[filter]
# 动作       | 动作名   | 代码
# 拦截       | block    |   1
# 转发／隧道 | forward  |   2
# 代理直连   | direct   |   3/4
# GAE 代理   | gae      |   5
# CFW 代理   | cfw      |   6
#请慎用 5 及之后的数值!!!
# http 链接默认动作［直连］会在无法连接时尝试活动代理
action = 3
# ssl 链接默认动作［转发／隧道］会使用网站自己的证书，不会生成额外的证书文件
# 同时可检测 SNI 重置，并添加临时规则不发送 SNI，仅默认动作有效
sslaction = 2

[picker]
#将其它工具扫描出的 IP 放入 data 目录的 ip.txt 和 ip_ex.txt 文件，格式为每行一个完整 IP
#随机扫描，ipex.txt 会排在 ip.txt 前面
# ip_ex.txt 可以放优质 IP，数量不宜过多，2-12 小时后自动删除此文件
#扫描时使用的主机名和匹配的域名，需配对
servername = fonts.googleapis.com
comdomain = *.googleapis.com
#使用严格模式时，会重新检查已分类 IP 是否正确分类
strict = 0
#屏蔽 bad IP 的时限，单位：小时
blocktime = 0.3
#容忍 bad IP 的次数，超过暂时屏蔽，建议 3 以下
timesblock = 3
#暂时屏蔽指定次数后永久屏蔽该 IP，默认 10 次
#手动将 IP 重新加入 ip.txt 或 ip_ex.txt 后会重置状态
timesdel = 10
#是否允许删除已分类的 IP
#只是从 ip.txt 中删除，不会删除分类信息
delassoeted = 0
# IP 使用统计数据记录天数 2-7 天
statdays = 4
#是否排序统计数据文件，实在想看就打开，会慢一点点
sortstat = 0
#屏蔽列表，如：xx.xxx|xxx.xx.|xxx.xxx.xxx|xxx.xxx.x.
block = 203.208.

[picker/gae]
#当发现筛选模式当前得到的 IP 质量较好时，可关闭筛选功能固定使用这些 IP
enable = 0
#检查当前使用中的 IP 的最小间隔，单位：秒，默认 40
minrechecktime = 40
#一直保持的可用 IP 数量，5-8 就不错，建议不要超过 15
#上限为 mincnt x 1.4，达到后会移除较慢的 IP
mincnt = 5
#最大握手时间，单位：毫秒
# GAE 大于 2000 为好
maxtimeout = 3000
#最大扫描 IP 的线程数量，线程数量会自动调整，2 个线程扫 1 个 IP
#达到线程数后会限制不移除可连接 IP
#设为 0 则完全不移除，直到 IP 数到达上限
maxthreads = 1

[picker/gws]
enable = 1
#默认 30
minrechecktime = 60
mincnt = 8
# GWS 不宜超过 2000
maxtimeout = 2000
maxthreads = 3

[proxy]
#前置代理未完成
enable = 0
autodetect = 1
host = 10.64.1.63
port = 8080
username =
password =

[autorange/fast]
#自动分段下载功能，侧重速度，多用于视频，需远程服务器支持 Range
#匹配路径结尾，也就是网址第一个问号（?）或井号(#)前的部分
#建议只加入多媒体文件，其余文件用专门的多线程工具（浏览器扩展或下载软件）下载，确有需求再临时加入
endswith = videoplayback|.deploy|.mp3|.ogg|.webm|.webp|.f4v|.flv|.hlv|.m4v|.mp4|.3gp|.mov|.ts|.mkv|.rmvb
#|.7z|.zip|.rar|.cab|.iso|.xz|.txz|.lzma|.tar|.bz2|.bzip2|.tbz2|.tbz|.gz|.gzip|.lzh|.deb|.dmg|.exe
#|.jpg|.jpeg|.gif|.png
#根据 IP 质量和数量选择合适的值，够用就好，不要太大，不然容易把 IP 暂时搞死
threads = 5
#首次最大下载量，不知道用处大不，姑且弄了这么个功能
firstsize = 32768
#单个线程最大下载量，IP 带宽不大时，建议设定小些
maxsize = 262144
#剔除慢速 IP，字节/秒，尽量小，IP 质量好的可以设大点
lowspeed = 8192

[autorange/big]
#自动分段下载功能，侧重大文件，不在意速度，需远程服务器支持 Range
#根据响应内容大小判断是否启用，默认为 33554432（GAE 限制 32MB）
#主要应对 GAE，另外可对大文件适当加速，但是千万不要设置地过小
#如果对小于 32 MB 的文件启用，会放弃第一个响应结果，会浪费一定的 GAE 入口带宽（浪费小于 32MB）
onsize =
#不要求速度，只求完整下载，不建议使用过多线程，下载出错时改为单线程，即 1
threads = 2
#后续线程启动间隔时间
sleeptime = 5
#单个线程最大下载量，建议至少 4MB
maxsize = 4194304
#不建议剔除慢速 IP，使用 0 或较小的数值
lowspeed = 0

[dns]
# DNS 模块，可以用来防止 DNS 劫持/污染
#   https://zh.wikipedia.org/zh/域名服务器缓存污染
#   https://zh.wikipedia.org/zh/防火长城
# IP[:端口]
#   端口可省略，缺省端口为 53
#   用［|］分割多个服务器
#用于 remote 优先级域名解析，请填写可靠的 DNS 服务器，默认 1.1.1.1|1.0.0.1
#注意：
#   不能是 53 端口的境内服务器，如果有将自动忽略
#   servers 中的境内服务器会自动加入到 localservers 中
#   不要与系统设置重复
#境内外判断依据为直连 IP 库，使用不同的数据源生成可能会有不同的判断
#当前直连 IP 库尚不支持 IPv6，一律通过，但是不正确的配置会破坏污染检测功能
servers =
#用于解析直连域名，填写 ISP DNS 或国内公共 DNS 以加快解析，默认 114.114.114.114|114.114.115.115
# ISP DNS 是宽带拨号时运营商分配的，它的速度最快，如果没啥大问题建议使用
#如果无法进入光猫或路由器的宽带连接信息页面查看，可以尝试在网络搜索引擎中使用
#关键字［运营商 地区 dns］来搜索，使用前可通过 ping 和 nslookup/dig 来测试可用性
#注意：
#   不能是境外服务器，如果有将自动忽略
#   不要与系统设置重复
localservers =
#用于检测 servers 污染的时间阈值，单位：毫秒，最大值为 100，默认 50
#如果无法稳定地反污染，可根据自己所在网络环境上下细微调整
#如果始终无法调整至稳定，请与作者联系
timethreshold =
#是否倾向使用 localservers 的解析结果
#开启后，remote 解析时会随机一个 localservers 的服务器同时发出查询，只有被污染的
#情况才会应用从 servers 查询的结果，否则应用通常更合理的 localservers 的结果
#如果 servers 都是非 53 端口，则强制禁用；否则如果包含境内服务器，则强制启用
localprefer = 1
#是否使用 localservers 解析直连域名
#开启后，直连域名只使用 localservers 解析
localhost = 1
#配合 localservers/localprefer/localhost 使用
# localwhitelist 添加使用 localservers 解析的域名
# localblacklist 排除使用 localservers 解析的域名 (解析结果不合理，换一个更好的服务器才是首选)
localwhitelist =
localblacklist =
#是否使用 DNS-over-HTTPS (WIRE)
# 2021-03-14 更新：
#一些公共服务器 SNI 被拦截，因 JSON 格式受支持率太低，现改为请求 application/dns-message 格式
overhttps = 1
# DNS-over-HTTPS API：主机名[:端口][/路径]
#   主机名是非 IP 域名，需要自行配置［direct/forward］IP 列表
#   主机名是 IP，可能需要配置伪造 SNI 名称
#   端口可省略，缺省端口为 443
#   路径可省略，缺省路径为 /dns-query
#   用［|］分割多个服务器，随机排序、互为后备，默认 cloudflare-dns.com
#可以从以下链接找到可用的服务器，大部分都支持 IPv4/6 双栈，并声明遵守隐私保护
#   https://github.com/curl/curl/wiki/DNS-over-HTTPS
#   使用时请自行评估安全性!!!
#   使用时请自行评估安全性!!!
#   使用时请自行评估安全性!!!
#使用时第一个查询会通过系统 DNS 解析功能查询服务器 IP 地址
#也可以在自动规则配置文件的［direct］小节中预先配置你使用的服务器的 IP 列表
overhttpsservers =
# DNS 查询的优先级别，失败了会后退至下一个级别，默认 remote|overhttps|system
#会以默认顺序补完没有填写的优先级设置
#同一优先级中所有服务器的查询请求是同时发出的
#启用 localhost 时，直连域名的解析直接应用 localservers 的结果，无反污染处理，不会后退至以下查询
#   system：操作系统，无反污染处理，如果本机没有运行反污染代理工具，请把它放到最后
#   remote：即上面 server 中指定的，反污染，速度较快
#   overhttps：DNS-over-HTTPS API，无污染，速度较慢
priority =

[dns/cache]
#缓存个数，默认 1024
entries =
#过期时间，单位：秒，默认 7200
expiration =
